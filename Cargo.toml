[package]
authors = ["sergey shmakov <tyfaproject@gmail.com>"] 
edition = "2021" #maybe cant compile but switch from 2018 to 2021
name = "tufa_backend" 
version = "0.1.0" 

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
actix-web = "4.0.1"
ansi_term = "0.12"
box_err_from_err = {path = "./proc_macro_libs/box_err_from_err"}
chrono = "0.4"
convert_case = "0.5.0"
dotenv = "0.15.0"
enum_extention = {path = "./proc_macro_libs/enum_extention"}
error_display = {path = "./proc_macro_libs/error_display"}
futures = "0.3.5"
gen_enum = {path = "./proc_macro_libs/gen_enum"}
gen_enum_without_values = {path = "./proc_macro_libs/gen_enum_without_values"}
git_info = {path = "./proc_macro_libs/git_info"}
html_parser = "0.6.2"
impl_display = {path = "./proc_macro_libs/impl_display"}
impl_from_for_upper_struct = {path = "./proc_macro_libs/impl_from_for_upper_struct"}
init_from_env = {path = "./proc_macro_libs/init_from_env"}
itertools = "0.10.1"
lazy_static = "1.4"
mongodb = "2.0.1"
num_cpus = "1.0"
provider_kind_from_config = {path = "./proc_macro_libs/provider_kind_from_config"}
regex = "1.5"
reqwest = {version = "0.11.0", features = ["json", "blocking"]}
serde = "1.0"
serde-xml-rs = "0.5.1"
serde_derive = "1.0"
serde_json = "1.0"
sqlx = {version = "0.5", features = ["runtime-tokio-native-tls", "postgres"]}
strum = "0.23.0"
strum_macros = "0.23.1"
thiserror = "1.0.30"
tokio = {version = "1.7.1", features = ["macros"]}
toml = "0.5"
# async-std = "1.10.0"
# displaydoc = "0.2.3"
# roux = "1.3.10" #reddit. worked with 0.4.0 version
#egg-mode = "0.15.0"//twitter
#google-youtube3 = "1.0.13+20200402" - do not saw openssl, under linux its all good
# quick-xml = "0.18.1"
# log = "0.4"
# simplelog = "0.9"
# tokio = {version = "0.2.0", features = ["macros"]}
# tokio-compat = "0.1.6"
# crossbeam = "0.8.0"
# async-std = "1.9.0"#remove later its only for example
# threadpool = "1.0"
# RustyXML = "0.3.0"
# xml-rs = "0.8" 
# xmlparser = "0.13.2" 
#google-youtube3-cli = "1.0.13+20200402" comand line interface as variant or just can use source code
# strum = { version = "0.20", features = ["derive"] }#for enum into string
#tutorial from https://blog.logrocket.com/configuration-management-in-rust-web-services/
# warp = "0.2"
#tutorial from https://blog.logrocket.com/configuration-management-in-rust-web-services/

[dev-dependencies]

###########################
# custom linker dependencies
# from https://www.lpalmieri.com/posts/session-based-authentication-in-rust/l

# On Windows 
# ```
# cargo install -f cargo-binutils
# rustup component add llvm-tools-preview
# ```
[target.x86_64-pc-windows-msvc]
rustflags = ["-C", "link-arg=-fuse-ld=lld"]

[target.x86_64-pc-windows-gnu]
rustflags = ["-C", "link-arg=-fuse-ld=lld"]

# On Linux:
# - Ubuntu, `sudo apt-get install lld clang`
# - Arch, `sudo pacman -S lld clang`
[target.x86_64-unknown-linux-gnu]
rustflags = ["-C", "linker=clang", "-C", "link-arg=-fuse-ld=lld"]

# On MacOS, `brew install michaeleisel/zld/zld`
[target.x86_64-apple-darwin]
rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/zld"]

[target.aarch64-apple-darwin]
rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/zld"]