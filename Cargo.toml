[package]
authors = ["sergey shmakov <tyfaproject@gmail.com>"] 
edition = "2021" #maybe cant compile but switch from 2018 to 2021
name = "tufa_backend" 
version = "0.1.0" 

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# We could use any path here, but we are following the community convention
# We could specify a library name using the `name` field. If unspecified,
# cargo will default to `package.name`, which is what we want.
path = "src/lib.rs"

[[bin]]
name = "tufa_backend"
path = "src/main.rs"

[dependencies]
actix-session = {version = "0.6", features = ["redis-rs-tls-session"]}
actix-web = "4.0.1"
actix-web-flash-messages = {version = "0.3", features = ["cookies"]}
actix-web-lab = "0.15"
ansi_term = "0.12"
anyhow = "1"
argon2 = {version = "0.4.0", features = ["std"]}
base64 = "0.13"
box_err_from_err = {path = "./proc_macro_libs/box_err_from_err"}
chrono = "0.4"
config = "0.11"
convert_case = "0.5.0"
dotenv = "0.15.0"
enum_extention = {path = "./proc_macro_libs/enum_extention"}
env_logger = "0.9"
error_display = {path = "./proc_macro_libs/error_display"}
futures = "0.3.5"
gen_enum = {path = "./proc_macro_libs/gen_enum"}
gen_enum_without_values = {path = "./proc_macro_libs/gen_enum_without_values"}
git_info = {path = "./proc_macro_libs/git_info"}
hex = "0.4"
hmac = {version = "0.12", features = ["std"]}
html_parser = "0.6.2"
htmlescape = "0.3"
impl_display = {path = "./proc_macro_libs/impl_display"}
impl_from_for_upper_struct = {path = "./proc_macro_libs/impl_from_for_upper_struct"}
init_from_env = {path = "./proc_macro_libs/init_from_env"}
itertools = "0.10.1"
lazy_static = "1.4"
mongodb = "2.0.1"
num_cpus = "1.0"
provider_kind_from_config = {path = "./proc_macro_libs/provider_kind_from_config"}
quickcheck = "0.9.2"
quickcheck_macros = "1.0.0"
rand = {version = "0.8", features = ["std_rng"]}
regex = "1.5"
reqwest = {version = "0.11.0", default-features = false, features = ["json", "blocking", "rustls-tls", "cookies"]}
secrecy = {version = "0.8", features = ["serde"]}
serde = "1.0"
serde-aux = "3"
serde-xml-rs = "0.5.1"
serde_derive = "1.0"
serde_json = "1.0"
sha2 = "0.10"
sqlx = {version = "0.5", default-features = false, features = ["postgres", "runtime-actix-rustls", "macros", "uuid", "chrono", "migrate", "offline"]}#"runtime-tokio-native-tls", 
strum = "0.23.0"
strum_macros = "0.23.1"
thiserror = "1.0.30"
time = "0.3.9"
tokio = {version = "1.7.1", features = ["macros"]}
toml = "0.5"
tracing = {version = "0.1", features = ["log"]}
tracing-actix-web = "0.5"
tracing-bunyan-formatter = "0.3"
tracing-log = "0.1"
tracing-subscriber = {version = "0.3", features = ["registry", "env-filter"]}
unicode-segmentation = "1"
urlencoding = "2"
uuid = {version = "0.8.1", features = ["v4", "serde"]}
validator = "0.14"
# async-std = "1.10.0"
# displaydoc = "0.2.3"
# roux = "1.3.10" #reddit. worked with 0.4.0 version
#egg-mode = "0.15.0"//twitter
#google-youtube3 = "1.0.13+20200402" - do not saw openssl, under linux its all good
# quick-xml = "0.18.1"
# log = "0.4"
# simplelog = "0.9"
# tokio = {version = "0.2.0", features = ["macros"]}
# tokio-compat = "0.1.6"
# crossbeam = "0.8.0"
# async-std = "1.9.0"#remove later its only for example
# threadpool = "1.0"
# RustyXML = "0.3.0"
# xml-rs = "0.8" 
# xmlparser = "0.13.2" 
#google-youtube3-cli = "1.0.13+20200402" comand line interface as variant or just can use source code
# strum = { version = "0.20", features = ["derive"] }#for enum into string
#tutorial from https://blog.logrocket.com/configuration-management-in-rust-web-services/
# warp = "0.2"
#tutorial from https://blog.logrocket.com/configuration-management-in-rust-web-services/

[dev-dependencies]
claim = "0.5"
fake = "~2.3"
linkify = "0.8"
once_cell = "1"
reqwest = "0.11"
serde_json = "1"
serde_urlencoded = "0.7.1"
tokio = {version = "1", features = ["rt", "macros"]}
wiremock = "0.5.2"

# ###########################
# # custom linker dependencies
# # from https://www.lpalmieri.com/posts/session-based-authentication-in-rust/l

# # On Windows 
# # ```
# # cargo install -f cargo-binutils
# # rustup component add llvm-tools-preview
# # ```
# [target.x86_64-pc-windows-msvc]
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]

# [target.x86_64-pc-windows-gnu]
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]

# # On Linux:
# # - Ubuntu, `sudo apt-get install lld clang`
# # - Arch, `sudo pacman -S lld clang`
# [target.x86_64-unknown-linux-gnu]
# rustflags = ["-C", "linker=clang", "-C", "link-arg=-fuse-ld=lld"]

# # On MacOS, `brew install michaeleisel/zld/zld`
# [target.x86_64-apple-darwin]
# rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/zld"]

# [target.aarch64-apple-darwin]
# rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/zld"]
