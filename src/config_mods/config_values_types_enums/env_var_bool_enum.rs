use procedural_macros_lib::AllVariants;
use procedural_macros_lib::EnumVariantCount;

use strum_macros::EnumIter;

#[derive(
    AllVariants,
    EnumVariantCount,
    EnumIter,
    Clone,
    Debug,
    serde_derive::Serialize,
    serde_derive::Deserialize,
    PartialEq,
    Eq,
    Hash,
    Copy,
)]
pub enum EnvBoolVar {
    MongoEnableInitialization,
    MongoEnableInitializationForProviders,
    MongoEnableInitializationForArxiv,
    MongoEnableInitializationForBiorxiv,
    MongoEnableInitializationForGithub,
    MongoEnableInitializationForHabr,
    MongoEnableInitializationFordMedrxiv,
    MongoEnableInitializationFordReddit,
    MongoEnableInitializationForTwitter,

    MongoEnableWriteErrorLogs,
    MongoEnableWriteErrorLogsForProviders,
    MongoEnableWriteErrorLogsForArxiv,
    MongoEnableWriteErrorLogsForBiorxiv,
    MongoEnableWriteErrorLogsForGithub,
    MongoEnableWriteErrorLogsForHabr,
    MongoEnableWriteErrorLogsFordMedrxiv,
    MongoEnableWriteErrorLogsFordReddit,
    MongoEnableWriteErrorLogsForTwitter,

    MongoEnableCleaningWarninglogsDb,
    MongoEnableCleaningWarninglogsDbForProviders,
    MongoEnableCleaningWarninglogsDbForArxiv,
    MongoEnableCleaningWarninglogsDbForBiorxiv,
    MongoEnableCleaningWarninglogsDbForGithub,
    MongoEnableCleaningWarninglogsDbForHabr,
    MongoEnableCleaningWarninglogsDbFordMedrxiv,
    MongoEnableCleaningWarninglogsDbFordReddit,
    MongoEnableCleaningWarninglogsDbForTwitter,

    MongoEnableCleaningWarninglogsDbCollections,
    MongoEnableCleaningWarninglogsDbCollectionsForProviders,
    MongoEnableCleaningWarninglogsDbCollectionsForArxiv,
    MongoEnableCleaningWarninglogsDbCollectionsForBiorxiv,
    MongoEnableCleaningWarninglogsDbCollectionsForGithub,
    MongoEnableCleaningWarninglogsDbCollectionsForHabr,
    MongoEnableCleaningWarninglogsDbCollectionsFordMedrxiv,
    MongoEnableCleaningWarninglogsDbCollectionsFordReddit,
    MongoEnableCleaningWarninglogsDbCollectionsForTwitter,

    MongoEnableLinkPartsRandomizeOrder,
    MongoEnableLinkPartsRandomizeOrderForProviders,
    MongoEnableLinkPartsRandomizeOrderForArxiv,
    MongoEnableLinkPartsRandomizeOrderForBiorxiv,
    MongoEnableLinkPartsRandomizeOrderForGithub,
    MongoEnableLinkPartsRandomizeOrderForHabr,
    MongoEnableLinkPartsRandomizeOrderFordMedrxiv,
    MongoEnableLinkPartsRandomizeOrderFordReddit,
    MongoEnableLinkPartsRandomizeOrderForTwitter,

    EnablewriteErrorLogsInLocalFolder,
    EnablewriteErrorLogsInLocalFolderForProvider,
    EnablewriteErrorLogsInLocalFolderForArxiv,
    EnablewriteErrorLogsInLocalFolderForBiorxiv,
    EnablewriteErrorLogsInLocalFolderForGithub,
    EnablewriteErrorLogsInLocalFolderForHabr,
    EnablewriteErrorLogsInLocalFolderFordMedrxiv,
    EnablewriteErrorLogsInLocalFolderFordReddit,
    EnablewriteErrorLogsInLocalFolderForTwitter,

    EnableCleaningWarningLogsDirectory,
    EnableCleaningWarningLogsDirectoryForProviders,
    EnableCleaningWarningLogsDirectoryForArxiv,
    EnableCleaningWarningLogsDirectoryForBiorxiv,
    EnableCleaningWarningLogsDirectoryForGithub,
    EnableCleaningWarningLogsDirectoryForHabr,
    EnableCleaningWarningLogsDirectoryFordMedrxiv,
    EnableCleaningWarningLogsDirectoryFordReddit,
    EnableCleaningWarningLogsDirectoryForTwitter,

    EnableProviders,
    EnableArxiv,
    EnableBiorxiv,
    EnableGithub,
    EnableHabr,
    EnabledMedrxiv,
    EnabledReddit,
    EnableTwitter,

    EnablePrints,
    EnablePrintsForProviders,
    EnablePrintsArxiv,
    EnablePrintsBiorxiv,
    EnablePrintsGithub,
    EnablePrintsHabr,
    EnablePrintsdMedrxiv,
    EnablePrintsdReddit,
    EnablePrintsTwitter,

    EnableWarningHighPrints,
    EnableWarningHighPrintsForProviders,
    EnableWarningHighPrintsForArxiv,
    EnableWarningHighPrintsForBiorxiv,
    EnableWarningHighPrintsForGithub,
    EnableWarningHighPrintsForHabr,
    EnableWarningHighPrintsFordMedrxiv,
    EnableWarningHighPrintsFordReddit,
    EnableWarningHighPrintsForTwitter,

    EnableWarninglowPrints,
    EnableWarninglowPrintsForProviders,
    EnableWarninglowPrintsForArxiv,
    EnableWarninglowPrintsForBiorxiv,
    EnableWarninglowPrintsForGithub,
    EnableWarninglowPrintsForHabr,
    EnableWarninglowPrintsFordMedrxiv,
    EnableWarninglowPrintsFordReddit,
    EnableWarninglowPrintsForTwitter,

    EnableSuccessPrints,
    EnableSuccessPrintsForProviders,
    EnableSuccessPrintsForArxiv,
    EnableSuccessPrintsForBiorxiv,
    EnableSuccessPrintsForGithub,
    EnableSuccessPrintsForHabr,
    EnableSuccessPrintsFordMedrxiv,
    EnableSuccessPrintsFordReddit,
    EnableSuccessPrintsForTwitter,

    EnablePartialSuccessPrints,
    EnablePartialSuccessPrintsForProviders,
    EnablePartialSuccessPrintsForArxiv,
    EnablePartialSuccessPrintsForBiorxiv,
    EnablePartialSuccessPrintsForGithub,
    EnablePartialSuccessPrintsForHabr,
    EnablePartialSuccessPrintsFordMedrxiv,
    EnablePartialSuccessPrintsFordReddit,
    EnablePartialSuccessPrintsForTwitter,

    EnableerrorPrints,
    EnableerrorPrintsForProviders,
    EnableerrorPrintsForArxiv,
    EnableerrorPrintsForBiorxiv,
    EnableerrorPrintsForGithub,
    EnableerrorPrintsForHabr,
    EnableerrorPrintsFordMedrxiv,
    EnableerrorPrintsFordReddit,
    EnableerrorPrintsForTwitter,

    EnableTimeMeasurementPrints,
    EnableTimeMeasurementPrintsForProviders,
    EnableTimeMeasurementForArxiv,
    EnableTimeMeasurementForBiorxiv,
    EnableTimeMeasurementForGithub,
    EnableTimeMeasurementForHabr,
    EnableTimeMeasurementFordMedrxiv,
    EnableTimeMeasurementFordReddit,
    EnableTimeMeasurementForTwitter,

    EnableinfoPrints,
    EnableinfoPrintsForProviders,
    EnableinfoForArxiv,
    EnableinfoForBiorxiv,
    EnableinfoForGithub,
    EnableinfoForHabr,
    EnableinfoFordMedrxiv,
    EnableinfoFordReddit,
    EnableinfoForTwitter,

    EnableproviderLinkslimit,
    EnablelinkslimitForArxiv,
    EnablelinkslimitForBiorxiv,
    EnablelinkslimitForGithub,
    EnablelinkslimitForHabr,
    EnablelinkslimitFordMedrxiv,
    EnablelinkslimitFordReddit,
    EnablelinkslimitForTwitter,

    EnableCommonProvidersLinkslimit,
}

impl EnvBoolVar {
    pub fn get_length() -> usize {
        ENUM_LENGTH
    }
}
